import torch
import torchvision
from torch import nn


# 方式1:对应保存方式1，加载模型
model = torch.load("vgg16_method1.pth")
# print(model)

# 方式2:加载模型
# 新建网络模型结构
vgg16 = torchvision.models.vgg16(pretrained=False)
# 调用网络模型
vgg16.load_state_dict(torch.load("vgg16_method2.pth"))
# model = torch.load("vgg16_method2.pth") #获得字典形式
# print(vgg16)

# 陷阱
class Tudui(nn.Module):
    def __init__(self):
        super(Tudui, self).__init__()
        self.conv1 = nn.Conv2d(3, 64, kernel_size=3)
